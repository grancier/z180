{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green45\blue153;\red77\green77\blue77;\red174\green15\blue46;
\red255\green164\blue159;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c17647\c60000;\csgenericrgb\c30196\c30196\c30196;\csgenericrgb\c68235\c5882\c18039;
\csgenericrgb\c100000\c64314\c62353;}
{\info
{\author G\'fcnter Woigk}
{\*\copyright cc-by-sa}}\paperw11900\paperh16840\margl1440\margr1440\vieww15300\viewh14020\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl264\slmult1\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Welcome,\

\b0 \
this is 
\b version 4.2
\b0  of the Z80 assembler 
\b zasm
\b0 .\
new in this version: support for #target TZX: directly create a .tzx tape files.\
\

\b install:
\b0 \
    copy zasm where you like, e.g. into /usr/local/bin/.\
\

\b Homepage, downloads & documentation:
\b0 \
    
\f1\fs22 http://k1.spdns.de/Develop/Projects/zasm/
\f0\fs24 \
\

\b Source:
\b0 \
    
\f1\fs22 http://k1.spdns.de/Git/
\f0\fs24 \
\

\b Send bug reports and requests to:\

\b0     
\f1\fs22 mailto:kio@little-bat.de
\f0\fs24 \
\

\b Contributed material:\

\b0     A bundle for 
\b TextMate
\b0  by Ast A. Moore, see below.\
\

\b Included 3rd party sources:\

\b0     Einar Saukas' ZX7 "optimal" LZ77 packer.\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl264\slmult1\pardirnatural\partightenfactor0

\b \cf0 \ul \ulc0 Short Introduction\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl264\slmult1\pardirnatural\partightenfactor0

\b0 \cf0 \ulnone \
zasm is a \cf2 Z80 assembler\cf0 . \
zasm supports assembling code for the Intel \cf2 8080\cf0  using Z80 syntax. \
zasm can also compile native 8080 assembler source.\
zasm also supports the additional opcodes for the Hitachi \cf2 HD64180\cf0 .\
zasm can generate binary files or \cf2 Intel Hex\cf0  or \cf2 Motorola S19\cf0  files.\
zasm supports generating various specialized files for \cf2 Sinclair and Jupiter Ace\cf0 .\
The \cf2 list\cf0  file can include the \cf2 generated opcodes\cf0  and accumulating \cf2 cpu cycles\cf0 .\
zasm supports \cf2 various\cf0  historically used syntax variants and the \cf2 syntax\cf0  emitted by sdcc.\
zasm supports \cf2 character set conversion\cf0 , e.g. for the ZX80 and ZX81.\
zasm supports including and \cf2 compiling of c source\cf0  with \cf2 sdcc\cf0 . \
zasm supports \cf2 ZX7 compression\cf0  directly from the source.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl264\slmult1\pardirnatural\partightenfactor0

\i \cf3 Note: you can download a tailored version of sdcc from the zasm download page.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl264\slmult1\pardirnatural\partightenfactor0

\i0 \cf0 Longish documentation is at 
\i http://k1.spdns.de/Develop/Projects/zasm/Documentation/
\i0 .\
\
In case you find a bug \cf4 send mailto:kio@little-bat.de\cf0 .\
Bugs which aren't reported can't be fixed.\
\
Start zasm \cf2 without arguments\cf0  to show all command line options.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl264\slmult1\pardirnatural\partightenfactor0

\b \cf0 Examples in folder Examples/:
\b0 \
    ZX80, ZX81, ZX Spectrum and Jupiter Ace emulator files\
    c project stub\
    zx7 .tap file example\
\

\b Compiling a c project:
\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl360\slmult1\pardirnatural\partightenfactor0
\cf0     
\i related command line options:
\i0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl264\slmult1\pardirnatural\partightenfactor0
\cf0     
\b \cf2 -c /path/to/scdd 
\b0 \cf0       \
            zasm tries to find your sdcc in your $PATH.\
            You can point it to your executable if reqired.\
    
\b \cf2 -I /path/to/include
\b0 \cf0 \
            This option (mind the space!) is passed (without space) to sdcc.\
            Use this option if sdcc doesn't find the header files \
            which you installed e.g. from "sdcc/include/".\
    
\b \cf2 --clean
\b0 \cf0 \
            zasm caches compiled c files. They are only recompiled if the\
            c file is modified. zasm does not monitor all included files and therefore,\
            in case you modify header files, you may wish to discard all cached files.\
            note: zasm creates a folder named "s/" which you can simply delete as well.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl360\slmult1\pardirnatural\partightenfactor0
\cf0     
\i related assembler directives in the assembler source file:
\i0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl264\slmult1\pardirnatural\partightenfactor0
\cf0     
\b \cf2 #CODE
\b0 \cf0    define a code segment with name, address, length and optional flag\
            sdcc uses various segments to store different kinds of code, \
            e.g. for code (sic!) or const data in rom. see example file \
            or see the (not existing) documentation of sdcc on this topic.\
    
\b \cf2 #DATA
\b0 \cf0    define a data segment.\
            you can't put code in a data segment, just allocate space for data in here. \
            used to define labels in ram, e.g. for variables.\
    
\b \cf2 #CFLAGS
\b0 \cf0  add or remove flags passed to sdcc. Two flags are always passed to sdcc, \
            unless you entirely replace the cflags: -mz80 and -S.\
    
\b \cf2 #INCLUDE LIBRARY "path/to/dir/"
\b0 \cf0 \
            include all files from the named directory which resolve unresolved labels.\
            Files must be named according to the labels they define, \
            e.g. assembler file "__divulong.s" defines label __divulong\
            or the c file "_malloc.c" defines label _malloc.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl264\slmult1\pardirnatural\partightenfactor0

\b \cf0 TextMate Bundle:
\b0 \
    This bundle was kindly provided by Ast A. Moore <astamoore@gmail.com>\
    	It adds 
\i syntax \cf2 hilighting
\i0 \cf0  for Z80 assembler source files, \
    	a keyboard shortcut to 
\i \cf2 assemble
\i0 \cf0  the current file \
    	and a shortcut to insert a template for 
\i \cf2 #target tap
\i0 \cf0 .\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl384\slmult1\pardirnatural\partightenfactor0

\b \cf2     Installation:\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl264\slmult1\pardirnatural\partightenfactor0

\b0 \cf0     The bundle contains a symbolic link to 
\i \cf2 /usr/local/bin/zasm
\i0 \cf0 . If you installed 
\i zasm
\i0  somewhere else, \
	then you must update the symbolic link in the bundle or assembling directly from 
\i TextMate
\i0  will not work.\
    Then double-click on the bundle file. This will currently (05'2018) install the bundle in \
	
\i ~/Library/Application Support/TextMate/Pristine Copy/Bundles/. 
\i0 Make shure that there is only one version \
	of this file installed. TextMate \ul keeps them all\ulnone  and \ul uses the oldest\ulnone . (
\i \cf5 no comment
\i0 \cf0 )\
    Restart 
\i TextMate
\i0 .\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl384\slmult1\pardirnatural\partightenfactor0

\b \cf2     Use:\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl264\slmult1\pardirnatural\partightenfactor0

\b0 \cf0     Open a Z80 source file.\
    If not automatically selected, select 
\i \cf2 "zasm Z80 Assembler" 
\i0 \cf0 from the language popup at the bottom of the editor window.\
    Select theme 
\i \cf2 "zasm Z80 Assembler"
\i0 \cf0  from menu 
\i "View>Theme"
\i0 .\
    To 
\i \cf2 assemble
\i0 \cf0  the current file, type 
\i \cf2 cmd-alt-A
\i0 \cf0  or select 
\i "Assemble"
\i0  from menu 
\i "Bundles>zasm Z80 Assembler"
\i0 .\
    To insert the 
\i \cf2 #target tap
\i0 \cf0  template, type 
\i \cf2 tape
\i0 \cf0  and then 
\i \cf2 tab
\i0 \cf0 .\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl264\slmult1\pardirnatural\partightenfactor0

\b \cf0 ZX7, an "optimal" LZ77 packer:
\b0 \
    The compressor and decompressors were written by Einar Saukas and others.\
    zasm supports direct compression of the generated code. \
    To decompress use one of the included Z80 decompressors in 
\i "Examples/"
\i0 .\
    For an example see 
\i "Examples/tap_with_zx7.asm"
\i0 .\
\
    \
}